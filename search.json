[{"path":"https://slcarter.com/rpersonalutils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 rpersonalutils authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://slcarter.com/rpersonalutils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steven Carter. Author, maintainer.","code":""},{"path":"https://slcarter.com/rpersonalutils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Carter S (2025). rpersonalutils: Personal R Utilities. R package version 0.0.0.9000, https://github.com/Steven314/rpersonalutils.","code":"@Manual{,   title = {rpersonalutils: Personal R Utilities},   author = {Steven Carter},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/Steven314/rpersonalutils}, }"},{"path":"https://slcarter.com/rpersonalutils/index.html","id":"rpersonalutils-","dir":"","previous_headings":"","what":"Personal R Utilities","title":"Personal R Utilities","text":"objective package serve easier way write functions snippets commonly use.","code":""},{"path":"https://slcarter.com/rpersonalutils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Personal R Utilities","text":"can install development version rpersonalutils GitHub : plans release CRAN primarily personal use.","code":"# install.packages(\"pak\") pak::pak(\"Steven314/rpersonalutils\")  # -- OR --  # intall.packages(\"remotes\") remotes::install_github(\"Steven314/rpersonalutils\")"},{"path":"https://slcarter.com/rpersonalutils/reference/collect_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect Query from SQL File — collect_query","title":"Collect Query from SQL File — collect_query","text":"SQL file, query database return results tibble.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/collect_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect Query from SQL File — collect_query","text":"","code":"collect_query(conn, path)"},{"path":"https://slcarter.com/rpersonalutils/reference/collect_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect Query from SQL File — collect_query","text":"conn database connection. path File path SQL file.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/collect_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect Query from SQL File — collect_query","text":"tibble containing results query.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/collect_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collect Query from SQL File — collect_query","text":"SQL must contain comments must end semicolon.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/count_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Duplicate Rows — count_duplicates","title":"Count Duplicate Rows — count_duplicates","text":"Count number rows filter show combinations duplicates. just wrapper around dplyr::count dplyr::filter.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/count_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Duplicate Rows — count_duplicates","text":"","code":"count_duplicates(.data, ...)"},{"path":"https://slcarter.com/rpersonalutils/reference/count_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Duplicate Rows — count_duplicates","text":".data tibble::tibble data frame. column name n. , work right. ... <data-masking> Variables group .","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/count_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Duplicate Rows — count_duplicates","text":"tibble (data frame) columns ... n column number rows combination ....","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/count_duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Duplicate Rows — count_duplicates","text":"","code":"mtcars |>     count_duplicates(cyl) #>   cyl  n #> 1   8 14 #> 2   4 11 #> 3   6  7"},{"path":"https://slcarter.com/rpersonalutils/reference/duck_con.html","id":null,"dir":"Reference","previous_headings":"","what":"DuckDB Connection — duck_con","title":"DuckDB Connection — duck_con","text":"Connect DuckDB file.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/duck_con.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DuckDB Connection — duck_con","text":"","code":"duck_con(dbdir, read_only = FALSE)"},{"path":"https://slcarter.com/rpersonalutils/reference/duck_con.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DuckDB Connection — duck_con","text":"dbdir Location database files. path existing directory file system. default (\"\"), data kept RAM. read_only Set TRUE read-operation. file-based databases, applied database file opened first time. Subsequent connections (via drv object drv object pointing path) silently ignore flag.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/duck_con.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DuckDB Connection — duck_con","text":"DuckDB connection object (duckdb::duckdb_driver).","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/geographic_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographic Distance Between Two Pairs of Coordinates — geographic_distance","title":"Geographic Distance Between Two Pairs of Coordinates — geographic_distance","text":"wraps geosphere::distGeo allows unit conversion. suitable use dplyr::mutate. vector lengths must able recycled. Preferrably refenrece coordinates length one length test coordinates.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/geographic_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographic Distance Between Two Pairs of Coordinates — geographic_distance","text":"","code":"geographic_distance(lat, long, lat_ref, long_ref, unit = c(\"miles\", \"km\"))"},{"path":"https://slcarter.com/rpersonalutils/reference/geographic_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geographic Distance Between Two Pairs of Coordinates — geographic_distance","text":"lat vector latitude coordinates. long vector longitude coordinates. lat_ref reference latitude. May vector. long_ref reference longitude. May vector. unit output unit, default miles. Must miles kilometers (km). conversion factor 1609.334 meters 1 mile.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/geographic_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geographic Distance Between Two Pairs of Coordinates — geographic_distance","text":"vector distance two points globe. missing coordinates return NA.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/geographic_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geographic Distance Between Two Pairs of Coordinates — geographic_distance","text":"","code":"coords <- c(36.68, -108.82) # somewhere in New Mexico ref    <- c(45, -100)       # somewhere in South Dakota  if (FALSE) geographic_distance(coords[1], coords[2], ref[1], ref[2]) # \\dontrun{}"},{"path":"https://slcarter.com/rpersonalutils/reference/grapes-notin-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Not In — %notin%","title":"Not In — %notin%","text":"opposite %%.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/grapes-notin-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Not In — %notin%","text":"","code":"lhs %notin% rhs"},{"path":"https://slcarter.com/rpersonalutils/reference/grapes-notin-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Not In — %notin%","text":"lhs vector. rhs vector.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/grapes-notin-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Not In — %notin%","text":"logical vector length lhs.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/grapes-notin-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Not In — %notin%","text":"","code":"a <- c(1, 2, 3) b <- c(1, 2)  # logical vector a %notin% b #> [1] FALSE FALSE  TRUE  # equivalent to !(a %in% b) #> [1] FALSE FALSE  TRUE"},{"path":"https://slcarter.com/rpersonalutils/reference/oracle_con.html","id":null,"dir":"Reference","previous_headings":"","what":"Oracle Database Connection — oracle_con","title":"Oracle Database Connection — oracle_con","text":"Connect Oracle database. Provide username password secret means.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/oracle_con.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Oracle Database Connection — oracle_con","text":"","code":"oracle_con(user, pass, dbname)"},{"path":"https://slcarter.com/rpersonalutils/reference/oracle_con.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Oracle Database Connection — oracle_con","text":"user Oracle username. pass Oracle password. dbname Database name.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/oracle_con.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Oracle Database Connection — oracle_con","text":"ROracle database connection (OraConnection).","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/oracle_con.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Oracle Database Connection — oracle_con","text":"Installing ROracle package can complicated. requires OCI library. Instructions can found Oracle website require Oracle account. version CRAN outdated, see Oracle recent release.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/select_columns_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Columns That Have Missing Values — select_columns_na","title":"Select Columns That Have Missing Values — select_columns_na","text":"Select Columns Missing Values","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/select_columns_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Columns That Have Missing Values — select_columns_na","text":"","code":"select_columns_na(.data, type = c(\"any\", \"all\"))"},{"path":"https://slcarter.com/rpersonalutils/reference/select_columns_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Columns That Have Missing Values — select_columns_na","text":".data tibble. type string, either \"\" \"\". Using \"\" take columns one missing values. Using \"\" take columns missing values.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/select_columns_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Columns That Have Missing Values — select_columns_na","text":"tibble.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/select_columns_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Columns That Have Missing Values — select_columns_na","text":"","code":"df <- tibble::tribble(     ~ x, ~ y, ~ z,     NA,   NA,   3,     NA,    2,   3 )  select_columns_na(df, \"any\") #> # A tibble: 2 × 2 #>   x         y #>   <lgl> <dbl> #> 1 NA       NA #> 2 NA        2  select_columns_na(df, \"all\") #> # A tibble: 2 × 1 #>   x     #>   <lgl> #> 1 NA    #> 2 NA"},{"path":"https://slcarter.com/rpersonalutils/reference/temp_duck_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Temporary DuckDB Table — temp_duck_table","title":"Create a Temporary DuckDB Table — temp_duck_table","text":"Creates caching system using temporary tables DuckDB. checks table exists creates temp table , can recalculate .","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/temp_duck_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Temporary DuckDB Table — temp_duck_table","text":"","code":"temp_duck_table(.data, con, tbl_name, overwrite = FALSE, quiet = TRUE)"},{"path":"https://slcarter.com/rpersonalutils/reference/temp_duck_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Temporary DuckDB Table — temp_duck_table","text":".data tibble dataframe-like object can inserted DuckDB. con DuckDB connection. tbl_name name temporary table. overwrite logical whether overwrite existing temporary table. quiet Suppress information messages. default true stop errors/warnings, messages inform user happening.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/temp_duck_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Temporary DuckDB Table — temp_duck_table","text":"lazy table DuckDB dplyr::tbl(), invisibly.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/temp_duck_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Temporary DuckDB Table — temp_duck_table","text":"allows cache calculation DuckDB retrieve later without inserting check calculate pull existing. inserting table must materialized. cache result dplyr::tbl() dplyr::collect() . function may change go away /{duckplyr} becomes friendly.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/write_duckdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a Table to a DuckDB Instance — write_duckdb","title":"Write a Table to a DuckDB Instance — write_duckdb","text":"Add replace table DuckDB instance ability add comment description table. wraps duckdb::dbWriteTable adds comment via dbExecute.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/write_duckdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a Table to a DuckDB Instance — write_duckdb","text":"","code":"write_duckdb(   con,   table,   table_name,   comment = NULL,   overwrite = TRUE,   ...,   quiet = FALSE )"},{"path":"https://slcarter.com/rpersonalutils/reference/write_duckdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a Table to a DuckDB Instance — write_duckdb","text":"con DuckDB connection. Default -memory database. table table add database. data.frame (coercible data.frame). table_name string name table database. comment string pasted vector strings comment table. overwrite Whether overwrite table database already exists. ... parameters passed duckdb::dbWriteTable DBI::dbWriteTable. quiet default output confirmation success. Set argument TRUE silence messages.","code":""},{"path":"https://slcarter.com/rpersonalutils/reference/write_duckdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a Table to a DuckDB Instance — write_duckdb","text":"Invisibly returns table.","code":""}]
